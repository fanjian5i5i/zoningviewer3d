<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.06400000000000003" tests="42" failures="0">
  <testsuite name="Root Suite" timestamp="2018-03-19T05:29:00" tests="0" failures="0" time="0">
  </testsuite>
  <testsuite name="The test suite" timestamp="2018-03-19T05:29:00" tests="2" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.001">
    <testcase name="The test suite should make assertions" time="0.001" classname="should make assertions">
    </testcase>
    <testcase name="The test suite should have access to modules" time="0" classname="should have access to modules">
    </testcase>
  </testsuite>
  <testsuite name="ArcBase" timestamp="2018-03-19T05:29:00" tests="0" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
  </testsuite>
  <testsuite name="as a shallow component" timestamp="2018-03-19T05:29:00" tests="2" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.005">
    <testcase name="ArcBase as a shallow component should exist" time="0" classname="should exist">
    </testcase>
    <testcase name="ArcBase as a shallow component should render the default loading component" time="0.005" classname="should render the default loading component">
    </testcase>
  </testsuite>
  <testsuite name="the user has included a custom loading element" timestamp="2018-03-19T05:29:00" tests="2" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.002">
    <testcase name="ArcBase as a shallow component the user has included a custom loading element should not render the default loading component" time="0.001" classname="should not render the default loading component">
    </testcase>
    <testcase name="ArcBase as a shallow component the user has included a custom loading element should render the custom loading component" time="0.001" classname="should render the custom loading component">
    </testcase>
  </testsuite>
  <testsuite name="as a mounted component" timestamp="2018-03-19T05:29:00" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
    <testcase name="ArcBase as a mounted component should call componentDidMount" time="0" classname="should call componentDidMount">
    </testcase>
  </testsuite>
  <testsuite name="the user has included a custom className" timestamp="2018-03-19T05:29:00" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.001">
    <testcase name="ArcBase as a mounted component the user has included a custom className should give that className to the container div" time="0.001" classname="should give that className to the container div">
    </testcase>
  </testsuite>
  <testsuite name="esriPromise succeeds" timestamp="2018-03-19T05:29:00" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.002">
    <testcase name="ArcBase as a mounted component esriPromise succeeds should call loadMap with the result of esriPromise" time="0.002" classname="should call loadMap with the result of esriPromise">
    </testcase>
  </testsuite>
  <testsuite name="the loadMap method succeeds" timestamp="2018-03-19T05:29:00" tests="2" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.003">
    <testcase name="ArcBase as a mounted component esriPromise succeeds the loadMap method succeeds should not display the failed state for the application" time="0.003" classname="should not display the failed state for the application">
    </testcase>
    <testcase name="ArcBase as a mounted component esriPromise succeeds the loadMap method succeeds should set the state of the map and view based on the result of loadMap" time="0" classname="should set the state of the map and view based on the result of loadMap">
    </testcase>
  </testsuite>
  <testsuite name="the user has included a child component" timestamp="2018-03-19T05:29:00" tests="2" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.005">
    <testcase name="ArcBase as a mounted component esriPromise succeeds the loadMap method succeeds the user has included a child component should render the child component" time="0.002" classname="should render the child component">
    </testcase>
    <testcase name="ArcBase as a mounted component esriPromise succeeds the loadMap method succeeds the user has included a child component should give map and view props to the child component" time="0.003" classname="should give map and view props to the child component">
    </testcase>
  </testsuite>
  <testsuite name="the user has included an onLoad callback" timestamp="2018-03-19T05:29:00" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.002">
    <testcase name="ArcBase as a mounted component esriPromise succeeds the loadMap method succeeds the user has included an onLoad callback should call onLoad with a reference to the map and view" time="0.002" classname="should call onLoad with a reference to the map and view">
    </testcase>
  </testsuite>
  <testsuite name="the user updates the mapProperties or viewProperties" timestamp="2018-03-19T05:29:00" tests="0" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
  </testsuite>
  <testsuite name="this dataFlow is set to oneTime" timestamp="2018-03-19T05:29:00" tests="0" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
  </testsuite>
  <testsuite name="the user updates the mapProperties with a valid key" timestamp="2018-03-19T05:29:00" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.001">
    <testcase name="ArcBase as a mounted component esriPromise succeeds the loadMap method succeeds the user updates the mapProperties or viewProperties this dataFlow is set to oneTime the user updates the mapProperties with a valid key should make no change to the JS API" time="0.001" classname="should make no change to the JS API">
    </testcase>
  </testsuite>
  <testsuite name="the user updates the mapProperties with an invalid key" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.002">
    <testcase name="ArcBase as a mounted component esriPromise succeeds the loadMap method succeeds the user updates the mapProperties or viewProperties this dataFlow is set to oneTime the user updates the mapProperties with an invalid key should make no change to the JS API" time="0.002" classname="should make no change to the JS API">
    </testcase>
  </testsuite>
  <testsuite name="the user updates the viewProperties with a valid key" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.003">
    <testcase name="ArcBase as a mounted component esriPromise succeeds the loadMap method succeeds the user updates the mapProperties or viewProperties this dataFlow is set to oneTime the user updates the viewProperties with a valid key should update the JS API accordingly" time="0.003" classname="should update the JS API accordingly">
    </testcase>
  </testsuite>
  <testsuite name="the user updates the mapProperties with an invalid key" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.002">
    <testcase name="ArcBase as a mounted component esriPromise succeeds the loadMap method succeeds the user updates the mapProperties or viewProperties this dataFlow is set to oneTime the user updates the mapProperties with an invalid key should make no change to the JS API" time="0.002" classname="should make no change to the JS API">
    </testcase>
  </testsuite>
  <testsuite name="the loadMap method fails" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.003">
    <testcase name="ArcBase as a mounted component esriPromise succeeds the loadMap method fails should display the failed state for the application" time="0.003" classname="should display the failed state for the application">
    </testcase>
  </testsuite>
  <testsuite name="esriPromise fails" timestamp="2018-03-19T05:29:01" tests="2" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.002">
    <testcase name="ArcBase as a mounted component esriPromise fails should not call loadMap" time="0" classname="should not call loadMap">
    </testcase>
    <testcase name="ArcBase as a mounted component esriPromise fails should display the default failed state for the application" time="0.002" classname="should display the default failed state for the application">
    </testcase>
  </testsuite>
  <testsuite name="the user has included a custom fail component" timestamp="2018-03-19T05:29:01" tests="2" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.003">
    <testcase name="ArcBase as a mounted component esriPromise fails the user has included a custom fail component should not display the default failed state for the application" time="0.001" classname="should not display the default failed state for the application">
    </testcase>
    <testcase name="ArcBase as a mounted component esriPromise fails the user has included a custom fail component should display the custom fail component" time="0.002" classname="should display the custom fail component">
    </testcase>
  </testsuite>
  <testsuite name="the user has included a custom fail callback" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.002">
    <testcase name="ArcBase as a mounted component esriPromise fails the user has included a custom fail callback should call the failure callback" time="0.002" classname="should call the failure callback">
    </testcase>
  </testsuite>
  <testsuite name="MapBase" timestamp="2018-03-19T05:29:01" tests="0" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
  </testsuite>
  <testsuite name="as a shallow component" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
    <testcase name="MapBase as a shallow component should exist" time="0" classname="should exist">
    </testcase>
  </testsuite>
  <testsuite name="as a mounted component" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
    <testcase name="MapBase as a mounted component should call componentDidMount" time="0" classname="should call componentDidMount">
    </testcase>
  </testsuite>
  <testsuite name="esriPromise succeeds" timestamp="2018-03-19T05:29:01" tests="0" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
  </testsuite>
  <testsuite name="loadMap successfully creates the map and view" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.001">
    <testcase name="MapBase as a mounted component esriPromise succeeds loadMap successfully creates the map and view should display the loaded state of the application" time="0.001" classname="should display the loaded state of the application">
    </testcase>
  </testsuite>
  <testsuite name="the user has included custom event handlers" timestamp="2018-03-19T05:29:01" tests="2" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.01">
    <testcase name="MapBase as a mounted component esriPromise succeeds loadMap successfully creates the map and view the user has included custom event handlers should display the loaded state of the application" time="0.008" classname="should display the loaded state of the application">
    </testcase>
    <testcase name="MapBase as a mounted component esriPromise succeeds loadMap successfully creates the map and view the user has included custom event handlers should pass the event handler to the ArcGIS JS API" time="0.002" classname="should pass the event handler to the ArcGIS JS API">
    </testcase>
  </testsuite>
  <testsuite name="loadMap returns a map which fails to load" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.003">
    <testcase name="MapBase as a mounted component esriPromise succeeds loadMap returns a map which fails to load should display the failed state of the application" time="0.003" classname="should display the failed state of the application">
    </testcase>
  </testsuite>
  <testsuite name="loadMap fails before the view is instantiated" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.002">
    <testcase name="MapBase as a mounted component esriPromise succeeds loadMap fails before the view is instantiated should display the failed state for the application" time="0.002" classname="should display the failed state for the application">
    </testcase>
  </testsuite>
  <testsuite name="WebBase" timestamp="2018-03-19T05:29:01" tests="0" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
  </testsuite>
  <testsuite name="as a shallow component" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
    <testcase name="WebBase as a shallow component should exist" time="0" classname="should exist">
    </testcase>
  </testsuite>
  <testsuite name="as a mounted component" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
    <testcase name="WebBase as a mounted component should call componentDidMount" time="0" classname="should call componentDidMount">
    </testcase>
  </testsuite>
  <testsuite name="loadMap successfully creates the map and view" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.001">
    <testcase name="WebBase as a mounted component loadMap successfully creates the map and view should display the loaded state of the application" time="0.001" classname="should display the loaded state of the application">
    </testcase>
  </testsuite>
  <testsuite name="the user has included custom event handlers" timestamp="2018-03-19T05:29:01" tests="2" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.003">
    <testcase name="WebBase as a mounted component loadMap successfully creates the map and view the user has included custom event handlers should display the loaded state of the application" time="0.003" classname="should display the loaded state of the application">
    </testcase>
    <testcase name="WebBase as a mounted component loadMap successfully creates the map and view the user has included custom event handlers should pass the event handler to the ArcGIS JS API" time="0" classname="should pass the event handler to the ArcGIS JS API">
    </testcase>
  </testsuite>
  <testsuite name="loadMap returns a map which fails to load" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.004">
    <testcase name="WebBase as a mounted component loadMap returns a map which fails to load should display the failed state for the application" time="0.004" classname="should display the failed state for the application">
    </testcase>
  </testsuite>
  <testsuite name="loadMap fails before the view is instantiated" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0.001">
    <testcase name="WebBase as a mounted component loadMap fails before the view is instantiated should display the failed state for the application" time="0.001" classname="should display the failed state for the application">
    </testcase>
  </testsuite>
  <testsuite name="Map" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
    <testcase name="Map should exist" time="0" classname="should exist">
    </testcase>
  </testsuite>
  <testsuite name="Scene" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
    <testcase name="Scene should exist" time="0" classname="should exist">
    </testcase>
  </testsuite>
  <testsuite name="WebMap" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
    <testcase name="WebMap should exist" time="0" classname="should exist">
    </testcase>
  </testsuite>
  <testsuite name="WebScene" timestamp="2018-03-19T05:29:01" tests="1" file="/home/nick/dev/react-arcgis/test/harness.ts" failures="0" time="0">
    <testcase name="WebScene should exist" time="0" classname="should exist">
    </testcase>
  </testsuite>
</testsuites>